@inherits MenuComponent

@if (State == MenuState.Menu)
{
    <div id="intro">
        <EditForm Model="Options" OnSubmit="SubmitAsync">
            <p>
                Number of players:
                <InputRadioGroup @bind-Value="Options.NumberOfPlayers">
                    @for (var players = MinPlayers; players <= MaxPlayers; players++)
                    {
                        <InputRadio id="@($"players_{players}")" Value="@players" />
                        <label for="@($"players_{players}")">@players</label>
                    }
                </InputRadioGroup>
            </p>
            <table>
                <tbody>
                    @for (var i = 0; i < Options.NumberOfPlayers; i++)
                    {
                        var playerId = i;
                        var playerIdClass = $"player{playerId}";
                        var player = Options.Players[i];
                        <tr id="@($"playerOptions{i}")">
                            <th class="@playerIdClass">Player @(playerId + 1)</th>
                            <td>
                                <InputRadioGroup Name="@playerIdClass"
                                                 TValue="int"
                                                 Value="@player.Type.Value"
                                                 ValueExpression="() => player.Type.Value"
                                                 ValueChanged="@(e => player.Type = PlayerType.FromValue(e))">
                                    @foreach (var playerType in Options.PlayerTypes)
                                    {
                                        var radioId = $"player_{playerId}_{playerType.Value}";
                                        <td>
                                            <InputRadio id="@radioId" Value="@playerType.Value" />
                                            <span aria-label="@playerType.Description" class="hint--bottom hint-info">
                                                <label for="@radioId">@playerType.Name</label>
                                            </span>
                                        </td>
                                    }
                                </InputRadioGroup>
                            </td>
                            <td>
                                @if (player.Type == PlayerType.Human)
                                {
                                    var inviteLink = Options.CreateInviteLink(player, InviteSerializer, NavigationManager.BaseUri);

                                    <div class="image-row">
                                        <a href="" @onclick="() => CopyInviteToClipboard(inviteLink.Url)" @onclick:preventDefault>
                                            <img src="images/copy.png" title="Copy invite to clipboard" alt="Copy invite to clipboard" />
                                        </a>
                                        <a href="@inviteLink.WhatsAppUrl" target="_blank">
                                            <img src="images/whatsapp.png" title="Send invite to WhatsApp" alt="Send invite to WhatsApp" />
                                        </a>
                                    </div>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <table>
                <caption>Options</caption>
                <tbody>
                    <tr>
                        <th>Colour scheme</th>
                        <td>
                            <InputRadioGroup Value="Options.ColourScheme.Value" 
                                             ValueChanged="@(e => ColourSchemeChanged(e))" 
                                             TValue="int" 
                                             ValueExpression="() => Options.ColourScheme.Value">
                                @foreach (var colourScheme in Options.ColourSchemes)
                                {
                                    <InputRadio id="@($"colours_{colourScheme.Name}")" Value="@colourScheme.Value" />
                                    <span aria-label="@colourScheme.Name" class="hint--bottom hint-info">
                                        <label for="@($"colours_{colourScheme.Name}")">@colourScheme.Name</label>
                                    </span>
                                }
                            </InputRadioGroup>
                        </td>
                    </tr>
                    <tr>
                        <th>Atom shapes</th>
                        <td>
                            <InputRadioGroup Value="Options.AtomShape" ValueChanged="@(e => AtomShapeChanged(e))" TValue="AtomShape" ValueExpression="() => Options.AtomShape">
                                @foreach (var atomShape in Options.AtomShapes)
                                {
                                    <InputRadio id="@($"shapes_{atomShape.Key}")" Value="@atomShape.Key" />
                                    <span aria-label="@atomShape.Value" class="hint--bottom hint-info">
                                        <label for="@($"shapes_{atomShape.Key}")">@atomShape.Value</label>
                                    </span>
                                }
                            </InputRadioGroup>
                        </td>
                    </tr>
                    <tr>
                        <th>Sound</th>
                        <td>
                            <InputRadioGroup Value="Options.HasSound" ValueChanged="@(e => SoundChanged(e))" TValue="bool" ValueExpression="() => Options.HasSound">
                                <InputRadio id="sound_on" Value="@true" />
                                <span aria-label="Sound On" class="hint--bottom hint-info">
                                    <label for="sound_on">On</label>
                                </span>
                                <InputRadio id="sound_off" Value="@false" />
                                <span aria-label="Sound Off" class="hint--bottom hint-info">
                                    <label for="sound_off">Off</label>
                                </span>
                            </InputRadioGroup>
                        </td>
                    </tr>
                </tbody>
            </table>
            <p>
                <button type="submit">Start game</button>
            </p>
            <p>
                <a href="" @onclick="@ShowAbout" @onclick:preventDefault>About the game</a>
            </p>
        </EditForm>
    </div>
}
else if (State == MenuState.About)
{
    <About OnHide="@HideAbout" />
}